@font-face {
    font-family: 'JetBrains Mono';
    src: url('../fonts/JetBrainsMono-Medium.ttf') format('truetype');
    font-weight: 400; /* Regular (default) weight */
    font-style: normal;
}

@font-face {
    font-family: 'JetBrains Mono';
    src: url('../fonts/JetBrainsMono-Bold.ttf') format('truetype');
    font-weight: 700; /* Bold weight */
    font-style: normal;
}

@font-face {
    font-family: 'JetBrains Mono';
    src: url('../fonts/JetBrainsMono-Thin.ttf') format('truetype');
    font-weight: 200; /* Thin weight */
    font-style: normal;
}

input, button, select, textarea, p, .search-container {
    font-family: 'JetBrains Mono', monospace;
}

circle {
    cursor: pointer;
    padding: 0px;
    margin: 0px;
}

text, circle text {
    cursor: pointer;
}

body, html {
    font-family: 'JetBrains Mono', monospace;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 16px;
    display: flex;
    flex-direction: row;
    margin: 0;
    padding: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    background-color: var(--page-bg-clr);
}

.right-pane, .left-pane {
    background-color: var(--pane-bg-clr);
    box-sizing: border-box;
    height: 100vh; /* Use viewport height */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 15px;
    width: 17vw;
    margin: 0;
    overflow-y: auto;
}

.right-pane {
    gap: 0px; 
}

/* .left-pane {
    width: 17vw; 
} */

.expand-collapse-right, .expand-collapse-left {
    position: relative;
}

.expand-collapse-buttonLeft, .expand-collapse-buttonRight {
    position: absolute;
    top: 50%; 
    transition: transform 0s ease, left 0s ease;
    z-index: 10; 
    cursor: pointer; 
}

.expand-collapse-buttonLeft {
    left: 100%; 
}

.expand-collapse-buttonRight {
    right: 100%;
}

.arrow-icon {
    width: 30px; 
    height: 30px; 
}

.graph-container {
    border-left: 2px solid var(--bdr-clr);
    border-right: 2px solid var(--bdr-clr);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    width: 66vw;
    height: 100vh; 
    margin: 0 auto; 
    overflow: hidden; 
}

.graph-container svg {
    width: 100%;
    height: 100%;
    display: block;
    margin: auto;
    cursor: move;
    background-color: var(--svg-bg-clr);
}

.left-pane input[type="text"],
.left-pane input[type="range"] {
    width: 90%; 
    margin: 5px 0;
}

.right-pane h2, .left-pane h2 {
    font-size: 1.3rem;
    margin: 0;
    padding: 3px 0; 
    text-align: center;
    font-weight: bold;
    color: white;
}

.left-pane h2 {
    background: linear-gradient(to bottom, var(--scrollbar-clr), var(--pane-ttle-bg-clr), var(--pane-ttle-bg-clr), var(--pane-ttle-bg-clr));
}

.right-pane p {
    text-align: center;
    padding: 3px;
    margin: 0;
    font-size: .75rem;
    background-color: white;
}

hr {
    height: 2.5px; 
    width: 95%; 
    background: linear-gradient(to right, var(--pane-ttle-bg-clr), var(--scrollbar-clr));
    border: none;
    border-radius: 10px;
    margin: -7px auto;
    /* box-shadow: var(--pane-ttle-bg-clr) 0px 1px 3px 0px; */
}

.description-header, .dependencies-header {
    margin-top: 0;
    font-size: .9rem;
    margin: 0;
    padding: 2px; 
    text-align: center;
    background-color: var(--descrip-clr);
    font-weight: bold;
    color: white;
    /* border-top: 2px solid var(--bdr-clr);
    border-bottom: 2px solid var(--bdr-clr); */
}

.dependencies-header {
    border-bottom: .5px solid var(--bdr-clr);
}

.right-pane .dependencies-header {
    background-color: var(--depend-hdr-clr);
}

.right-pane .dependency-type-header {
    color: white;
}

.right-pane .dependency-node {
    padding: 3px;
    margin: 0;
    font-size: 0.75rem;
    text-align: left;
}

.dependency-node {
    cursor: pointer;
    background-color: var(--svg-bg-clr);
}

.dependency-node:hover, .dependency-type-header:hover {
    font-weight: bold;
    text-decoration: underline;
}

.right-pane h4 {
    margin-top: 10px;
}

.failed-search {
    color: white;
    font-size: .7rem;
    text-align: center;
    background-color: var(--err-msg-clr);
    padding: 2px 4px;
    margin: -5px auto;
    border-radius: 3px;
    opacity: 1;
    animation: fadeInOut 5s;
    display: none; /* Ensure it is hidden by default */
    width: max-content;
    max-width: 80%;
    white-space: pre-line;
}

title {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--pane-ttle-bg-clr);
    text-align: center;
    margin: 0;
    padding: 3px;
}

.custom-slider {
    width: 90%;
    margin: -10px auto;
}

.custom-slider input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 8px;
    background: transparent;
    margin: 0;
    cursor: default;
    position: relative;
}

.button-container {
    display: flex;
    justify-content: center;
}

#homeButton, #refreshButton {
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    background: none;
    cursor: pointer;
}

.home-icon, .refresh-icon, .settings-icon {
    width: 30px;
    height: 30px;
    cursor: pointer;
}

.custom-slider input {
    width: 100%; 
}

.search-input-and-button {
    display: flex; /* Align the icon and input side-by-side */
    flex-direction: row;
    align-items: center;
    width: 100%; /* Ensure it spans the container */
    background-color: white; /* Match the container background */
    position: sticky; /* Keep it fixed while scrolling */
    top: 0; /* Stick to the top of the container */
    z-index: 10; /* Ensure it stays above the dropdown */
}

.search-input-and-button:focus {
    border-bottom: 2px solid var(--pane-ttle-bg-clr); /* Subtle shadow */
}


.search-container {
    position: relative; /* Necessary for dropdown alignment */
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    width: 90%;
    max-height: 15%;
    margin: 0 auto;
    background-color: var(--page-bg-clr);
    border-radius: 15px; 
    border: 1px solid var(--pane-bg-clr);
    overflow-y: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.search-container, .group-asset-toggle-container, .switches-container, 
#depthSlider, .groupSwitch span, .assetSwitch span, .indirectRelationshipSwitch span .tool-tip,
.see-all-assets, .close-all-assets   {
    transition: 0.5s ease-in-out; 
}

.tool-tip {
    transition: 3s ease-in-out;
}

.search-container:active, .search-container:focus-within, .tool-tip {
    border: .75px solid var(--pane-ttle-bg-clr); 
    box-shadow: var(--bdr-clr) 0px 2px 8px 0px; 
}

.search-container:hover, .group-asset-toggle-container:hover, 
.switches-container:hover, #depthSlider:hover, .tool-tip, .see-all-assets:hover, .close-all-assets:hover {
    box-shadow: var(--bdr-clr) 0px 2px 8px 0px; 
}


#depthSlider:hover {
    border-radius: 10px;
}

.autocomplete-suggestions {
    font-size: 0.6rem;
    padding: 5px 10px;
    cursor: pointer;
    white-space: nowrap; 
    text-overflow: ellipsis;
    overflow: hidden;
    overflow-y: auto;
}

.autocomplete-suggestions:last-child {
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}

.autocomplete-suggestions:hover {
    background: linear-gradient(to right, var(--pane-ttle-bg-clr), var(--scrollbar-clr));
    color: white;
}

#searchInput {
    flex-grow: 1;
    font-size: .8rem;
    border: none;
    outline: none;
    background-color: transparent;
    color: #282828; 
    white-space: nowrap; 
    text-overflow: ellipsis;
    padding-right: 5px;
}

#searchButton, #clearButton {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    border: none;
    background: none;
    margin: 0;
    cursor: pointer;
}

#clearButton {
    display: none; /* Initially hidden */
}

.search-icon, .clear-icon {
    width: 20px;
    height: 20px;
    opacity: 0.8;
}

.search-icon:hover, .clear-icon:hover {
    opacity: 1;
}

label, .depthSlider {
    text-align: left;
    padding: 0;
    margin: 0;
    font-size: .75rem;
    margin-left: 10%;
}

.group-asset-toggle-container label, .switches-container label {
    font-size: .75rem;
    font-weight: normal;
    gap: 5px;
}

.group-asset-toggle-container, .switches-container {
    background-color: var(--svg-bg-clr);
    border-radius: 10px;
    width: 95%;
    margin: 0px auto;
    margin-top: 15px;
}

.depthSlider {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin: 0px auto;
    gap: 5px;
    color: var(--bdr-clr);
    font-weight: bold;
}

.dependency-type-header {
    font-size: 16px;
    margin: 0;
    padding: 5px;
    cursor: pointer;
    /* border-top: 1.5px solid var(--bdr-clr);
    border-bottom: 1.5px solid var(--bdr-clr); */
}

.dependency-type-header:hover, .dependency-node:hover {
    text-decoration: underline;
}

.tool-tip {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    /* transform: translate(-73%, -135%);  */
    transform: translate(-73%, calc(-135% + var(--scroll-offset)));
    background-color: var(--tooltip-bg-clr);
    padding: 5px;
    border-radius: 5px;
    z-index: 100;
    min-width: 50px;
    max-width: 550px;
    word-wrap: break-word;
    white-space: normal;
    font-size: 0.75rem;
    transition: opacity 0.5s ease, visibility 0.5s ease; /* Smooth transition */
    display: sticky;
}

.tool-tip::after {
    z-index: 1;
    content: "";
    position: absolute;
    top: 100%; /* Position the arrow at the bottom of the tool-tip */
    left: 85%;
    transform: translateX(-50%);
    border-width: 7.8px; /* Outer triangle size */
    border-style: solid;
    border-color: var(--bdr-clr) transparent transparent transparent; /* Outer border color (black) */
}

.tool-tip::before {
    z-index: 2;
    content: "";
    position: absolute;
    top: 99%; /* Slightly lower than ::after for proper layering */
    left: 85%;
    transform: translateX(-50%);
    border-width: 8px; /* Inner triangle size */
    border-style: solid;
    border-color: var(--tooltip-bg-clr) transparent transparent transparent; /* Matches tool-tip background */
}

.dependency-node-container:hover .tool-tip {
    opacity: 1;
    visibility: visible;
    pointer-events: auto; /* Enable interaction when visible */
    transition: .5s ease-in-out;
}

.dependency-node:hover + .tool-tip {
    display: block; 
}

.dynamic-group-toggles {
    width: 100%;
    margin: 0px auto;
}

.groupSwitch, .assetSwitch, .indirectRelationshipSwitch, .switch {
    display: flex;
    align-items: center;
    margin: 15px auto;
}

.groupSwitch input, .assetSwitch input, .indirectRelationshipSwitch input, .switch input {
    display: none;
}

.slider {
    position: relative;
    display: inline-block;
    width: 25px; /* Toggle width */
    height: 15px; /* Toggle height */
    margin-left: 10px;
}

.slider.round {
    border-radius: 10px; /* Matches reduced height for a circular appearance */
}

.slider.round:before {
    border-radius: 50%;
}

.slider:before {
    position: absolute;
    content: "";
    height: 8px; /* Adjusted knob size */
    width: 8px; /* Adjusted knob size */
    left: 2.5px; /* Centering horizontally within the toggle */
    top: 3.5px; /* Centering vertically within the toggle */
    background-color: white;
}

input:checked + .slider {
    /* border: 1px solid #282828; */
    cursor: pointer;
}

input:checked + .slider:before {
    transform: translateX(12px); 
    position: absolute;
    content: "";
    height: 12px; /* Adjusted knob size */
    width: 12px; /* Adjusted knob size */
    left: -.5px; /* Centering horizontally within the toggle */
    top: 1.5px; 
}

input + .slider {
    border: 1px solid transparent;
}

.custom-slider input[type="range"]::-webkit-slider-runnable-track {
    width: 100%;
    height: 10px;
    border-radius: 5px;
    background: linear-gradient(to right, var(--pane-ttle-bg-clr) 0%, var(--scrollbar-clr) var(--value), var(--svg-bg-clr) var(--value), var(--svg-bg-clr) 100%);
}

.custom-slider input[type="range"]::-moz-range-track {
    width: 100%;
    height: 10px;
    border-radius: 5px;
    background-color: var(--pane-ttle-bg-clr) ;
}
/* Change the appearance of the vertical thumb */
.custom-slider input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    background-color: var(--scrollbar-clr); 
    width: 12px;
    height: 40px;
    margin-top: -14px;
    border-radius: 10px;
    cursor: pointer;
    border: 4px solid var(--pane-bg-clr);
}

.custom-slider input[type="range"]::-moz-range-thumb {
    background-color: var(--pane-ttle-bg-clr) ;
    width: 3px;
    height: 24px;
    border-radius: 5px;
    cursor: pointer;
}

.checkmark {
    position: absolute;
    top: 50%; /* Center vertically */
    left: 72%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Align the checkmark center */
    width: 10px; /* Smaller size for the checkmark */
    height: 10px; /* Smaller size for the checkmark */
    opacity: 0; 
    pointer-events: none;
    transition: opacity 0.4s ease-out, transform 0.2s ease-in;
}

input:checked + .slider .checkmark {
    opacity: 1;
}

.see-all-assets, .close-all-assets {
    font-weight: bold;
    padding: 5px 10px;
    font-size: .75rem;
    display: flex;
    place-content: center;
    margin: 5px auto;
    background-color: var(--svg-bg-clr);
    color: var(--pane-ttle-bg-clr);
    border: .75px solid var(--bdr-clr);
    border-radius: 20px;
}

.see-all-assets {
    display: none;
}

.see-all-assets:hover, .close-all-assets:hover {
    cursor: pointer;
    color: rgba(24, 40, 83, 1);
}

/* The overlay covering the page (already in your code) */
/* The overlay covering the page */
/* Full-screen overlay that blurs the background */
/* The overlay itself */
.all-assets-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
    transform: translateX(100%);
    transition: transform 0.5s ease-in-out;
    overflow: hidden; /* Prevent overflow of the overlay */
}

/* Show the overlay when active */
.all-assets-overlay.show {
    transform: translateX(0);
}

/* The modal content */
.all-assets-overlay .all-assets-content {
    width: fit-content;
    max-width: 80%;
    height: 80%;
    background-color: var(--pane-bg-clr);
    overflow: hidden; /* Prevent the entire modal from scrolling */
    padding-top: 5px;
    padding-bottom: 0;
    border-radius: 5px;
    border: 2px solid var(--bdr-clr);
    box-shadow: 0 0 10px 0 rgb(0, 0, 0);
    display: flex; /* Make it a flex container */
    flex-direction: column; /* Allow vertical stacking */
}

/* The main container holding the groups */
#allAssetsContainer {
    display: flex; /* Arrange the columns in a row */
    flex-grow: 1;
    justify-content: left;
    overflow-x: auto; /* Allow horizontal scrolling if needed */
    gap: 5px; /* Spacing between columns */
}

/* Individual group (column) */
.asset-group {
    display: flex;
    flex-direction: column;
    height: 98%; /* Ensure it fills the container height */
}

.asset-group:first-child {
    margin-left: 5px; /* Add space to the left of the first group */
}

.asset-group:last-child {
    margin-right: 5px; /* Add space to the right of the last group */
}

.asset-group-header {
    color: var(--svg-bg-clr);
    padding: 2px 5px;
    font-size: 1rem;
    text-align: center;
    font-weight: bold;
    background-color: var(--header-bg-clr);
} 

.asset-group-header {
    margin: 0;
}

.asset-item {
    padding: 3px;
    margin: 0;
    font-size: 0.75rem;
    text-align: left;
}

.asset-item:hover {
    font-weight: bold;
    text-decoration: underline;
    cursor: pointer;
}

/* Scrollable container for items */
/* Ensure asset-items match header width */
.asset-items-container {
    overflow-y: auto; /* Allow vertical scrolling */
    background-color: var(--svg-bg-clr);
    border: 0.75px solid var(--bdr-clr);
    border-top: none;
    padding: 3px;
    font-size: 0.75rem;
    text-align: left;
    width: inherit; /* Match width to parent container */
    min-width: 150px; /* Set a minimum width */
    max-width: 250px; /* Set a max width to control wrapping */
    word-wrap: break-word; /* Wrap long words */
    white-space: normal; /* Ensure text wraps */
}


.close-all-assets {
    position: absolute;
    top: 1%;
    right: 1%;
    margin: 0px auto;
    border-radius: 50%;
    padding: 2px;
}

/* Container around all dependency nodes for a specific group */
.dependency-nodes-container {
    overflow: auto;   
}


.right-pane {
    display: flex;
    flex-direction: column;
    width: 17vw;
    height: 100vh;    /* Fill viewport height */
    overflow: hidden; /* Hide internal scroll for the pane itself */
    /* background-color, etc. as needed */
}

  /* 1) Keep the top section pinned to the top */
.top-section {
    position: sticky;
    top: 0;
    z-index: 10; 
    background-color: var(--pane-bg-clr);
    /* Add padding, margin, or other styles as you like */
}

  /* 2) Dependencies wrapper scrolls if the content is taller than what's left */
.dependencies-wrapper {
    /* If you want it to scroll, ensure it has a defined height or flex growth */
    flex: 1;           /* if .right-pane is display: flex */
    min-height: 0;     /* prevents the child from pushing the parent indefinitely */
    overflow-y: auto;  

    /* add some padding or border so margin-bottom on the children won’t collapse */
    padding: 1rem 0;   
    /* border: 1px solid transparent; */ /* Or a real border if you prefer */
}

/* 3) If you still want each group to have its own “limited” scroll,
     you can add the 5-line limit inside each group container. */
.dependency-nodes-container {
    max-height: 6em; 
    overflow-y: auto;
    line-height: 1.2; 
    /* Instead of margin-bottom, use padding: */
    /* margin-bottom: .4rem;  */
}

#autocompleteSuggestions {
    overflow: auto;
    background-color: var(--svg-bg-clr);
}

#autocompleteSuggestions::-webkit-scrollbar, .dependency-nodes-container::-webkit-scrollbar {
    width: 5px;
    background-color: var(--pane-bg-clr);
}

::-webkit-scrollbar {
    max-height: 10px; 
    width: 10px;
    background-color: var(--pane-bg-clr);
}

::-webkit-scrollbar-thumb {
    background: var(--scrollbar-clr);
    cursor: pointer;
    min-height: 20px;
    border: none;
}

::-webkit-scrollbar-track {
    background-color: var(--svg-bg-clr);
    margin: 0px 2px; 
}

::-webkit-scrollbar-thumb:hover {
    background: var(--scrollbar-hvr-clr);
}

